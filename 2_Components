Revision
#----------------------------------------------
# Import Flask
from flask import Flask
#----------------------------------------------
# Initialization: Initialize it
app = Flask(__name__)
#----------------------------------------------
# Create A route: a mapping from the web-browser 
  #to the python code
@app.route('/hello') #'hostname/hello' 
#@app.route('/') #No route, just the host
def helloIndex():
    return "Hello World from python Flask!'

#----------------------------------------------
# Start A webserver to make it run
app.run(host='0.0.0.0', port=5000)
#----------------------------------------------
# Run Flask Program
$ python hello.py
#----------------------------------------------
# On Browser
http://0.0.0.0:5000/hello # slash hello is the route
Hello World from python Flask!

http://0.0.0.0:5000 # No route, just the domain , 0.0.0.0
#----------------------------------------------
# Kill it
pkill -9 -f python
#----------------------------------------------
# Main domain name /slash routes, specific routes

#----------------------------------------------
from flask import request
def shutdown_server():
    func = request.environ.get('werkzeug.server.shutdown')
    if func is None:
        raise RuntimeError('Not running with the Werkzeug Server')
    func()
    
@app.get('/shutdown')
def shutdown():
    shutdown_server()
    return 'Server shutting down...'
#----------------------------------------------
#Here is another approach that is more contained:

from multiprocessing import Process

server = Process(target=app.run)
server.start()
# ...
server.terminate()
server.join()

#----------------------------------------------
Key facts
#----------------------------------------------
Setup a virtualenv
Allow port 5000 in your firewall (if you have one running)
Save the code below as hello.py
The code to create a hello world app:

from flask import Flask
 
app = Flask(__name__)
 
@app.route('/')
def index():
    return 'Python Flask'
 
@app.route('/hello')
def helloIndex():
    return 'Hello World from Python Flask!'
 
app.run(host='0.0.0.0', port= 5000)
#Start the server with
